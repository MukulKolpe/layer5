{"version":3,"file":"component---src-pages-service-mesh-management-meshery-integrations-js-ec206205db032169ebff.js","mappings":"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","sources":["webpack://Layer5/./src/sections/Meshery/Meshery-integrations/Integration.style.js","webpack://Layer5/./src/sections/Meshery/Meshery-integrations/IntegrationsGrid.js","webpack://Layer5/./src/sections/Meshery/Meshery-integrations/index.js","webpack://Layer5/./src/pages/service-mesh-management/meshery/integrations.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const HoneycombGrid = styled.div`\n  display: flex;\n  --s: 9.375rem;\n  --m: 0.25rem;\n  --f: calc(var(--s) * 1.732 + 4 * var(--m) - 1px);\n\n  .container {\n    filter: drop-shadow(0px 4px 20px rgba(0, 0, 0, 0.1));\n    font-size: 0;\n  \n  }\n\n  .container div {\n    background: white;\n    width: var(--s);\n    margin: var(--m);\n    height: calc(var(--s) * 1.1547);\n    display: inline-block;\n    font-size: initial;\n    clip-path: polygon(0% 25%, 0% 75%, 50% 100%, 100% 75%, 100% 25%, 50% 0%);\n    margin-bottom: calc(var(--m) - var(--s) * 0.2885);\n\n    :hover {\n      transition: all 0.25s ease-in;\n      transform: scale(1.03);\n      background: #00d3a9;\n      \n    \n    }\n  }\n  .container div div {\n    display: flex;\n    height: 10.125rem;\n    width: 8.8125rem;\n    margin: 0.3125rem;\n    justify-content: center;\n    align-items: center;\n    \n    :hover{\n      background:white;\n    }\n    img{\n      height:60px;\n    }\n  }\n  .container::before {\n    content: \"\";\n    width: calc(var(--s) / 2 + var(--m));\n    float: left;\n    height: 120%;\n    shape-outside: repeating-linear-gradient(\n      #0000 0 calc(var(--f) - 3px),\n      #000 0 var(--f)\n    );\n  }\n \n  @media(max-width:768px){\n    --s: 7.8125rem;\n    .container div div{\n      height:8.125rem;\n      width:7.3125rem;\n      margin:0.3125rem;\n\n      img{\n        height:50px;\n      }\n    }\n  }\n\n`;\n\n\nexport const IntegrationsWrapper = styled.div`\n  max-width: 75rem;\n  margin: 5.1875rem auto;\n\n  .heading {\n    text-align: center;\n\n    h1 {\n      line-height: 3.75rem;\n    }\n\n    h2 {\n      font-weight: normal;\n    }\n  }\n\n  .category {\n    display: flex;\n    flex-wrap: wrap;\n    margin: 2.5625rem 0;\n    gap: 0.625rem;\n    justify-content: center;\n  }\n\n  .items {\n    background-color: #f0f0f0;\n    padding: 0.625rem 1.5625rem;\n    border-radius: 0.625rem;\n    text-transform: uppercase;\n    color: #1e2117;\n    font-size: 0.875rem;\n    cursor: pointer;\n  }\n\n  .selected {\n    background-color: ${props => props.theme.darkJungleGreenColor};\n    color: ${props => props.theme.white};\n  }\n\n  .integrations-grid {\n    margin: 2rem auto 8rem;\n\n    @media screen and (min-width:530px) and (max-width: 600px) {\n      margin: 2rem auto 13rem;\n    }\n\n    @media screen and (min-width:400px) and (max-width: 465px) {\n      margin: 2rem auto 18rem;\n    }\n  }\n\n  @media (max-width: 394px) and (min-width: 315px) {\n    padding-bottom: 37.5rem;\n  }\n`;\n\n\n\n\n\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { HoneycombGrid } from \"./Integration.style\";\n\nconst IntegrationsGrid = ({ obj }) => {\n  return (\n    <HoneycombGrid>\n      <div className=\"container\">\n        {obj.map((item,index) => {\n          const status = item.status === \"InProgress\" ? true : false;\n\n          const data = status ? (\n            <div style={{ background: \"#A0AAAA\" }} key={index}>\n              <div style={{ background: \"#A0AAAA\" }}>\n                <img\n                  src={item.img}\n                  alt={item.name}\n                  style={{\n                    filter: \"brightness(0) invert(1)\",\n                  }}\n                />\n              </div>\n            </div>\n          ) : (\n            <div>\n              <Link\n                to={`/service-mesh-management/meshery/integrations/${item.name.toLowerCase()}`}\n              >\n                <div>\n                  <img\n                    src={item.img}\n                    alt={item.name}\n                  />\n                </div>\n              </Link>\n            </div>\n          );\n\n          return data;\n        })}\n      </div>\n    </HoneycombGrid>\n  );\n};\n\nexport default IntegrationsGrid;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport IntegrationsGrid from \"./IntegrationsGrid\";\nimport IntegrationList from \"../../../assets/data/integrations/IntegrationList\";\nimport FAQ from \"../../General/Faq\";\nimport { IntegrationsWrapper } from \"./Integration.style\";\n\nconst Integrations = () => {\n  const [categoryList, setcategoryList] = useState([\n    { id: 1, name: \"All\", isSelected: true },\n    { id: 2, name: \"Platforms\", isSelected: false },\n    { id: 3, name: \"Service Mesh\", isSelected: false },\n    { id: 4, name: \"Operating System\", isSelected: false },\n    { id: 5, name: \"Collaboration\", isSelected: false },\n  ]);\n\n  const [integrationCollection, setintegrationCollection] =\n    useState(IntegrationList);\n\n  const filterCategory = (e) => {\n    const category = e.target.innerHTML;\n\n    if (category !== \"All\") {\n      categoryList[0].isSelected = false;\n\n      categoryList.forEach((element) => {\n        element.name === category\n          ? (element.isSelected = !element.isSelected)\n          : null;\n      });\n\n      setcategoryList(categoryList);\n    } else {\n      categoryList[0].isSelected = true;\n\n      categoryList.forEach((element) => {\n        element.name !== \"All\" ? (element.isSelected = false) : null;\n      });\n\n      setcategoryList(categoryList);\n    }\n\n    let tempCat = [];\n\n    categoryList.map((item) => {\n      if (item.isSelected) tempCat.push(item.name);\n    });\n\n    filterCollection(tempCat);\n  };\n\n  const filterCollection = (selectedCategoryList) => {\n    let tempInt = [];\n    IntegrationList.forEach((Integration) => {\n      selectedCategoryList.forEach((item) => {\n        if (item === Integration.category || item === \"All\")\n          tempInt.push(Integration);\n      });\n    });\n\n    setintegrationCollection(tempInt);\n  };\n\n  return (\n    <IntegrationsWrapper>\n      <section className=\"heading\">\n        <h1>Built-In Integrations</h1>\n        <h2>Support for your Cloud Native Infrastructure and Apps</h2>\n      </section>\n      <section className=\"category\">\n        {categoryList.map((item) => {\n          return (\n            <p\n              key={item.id}\n              className={item.isSelected ? \"items selected\" : \"items\"}\n              onClick={filterCategory}\n            >\n              {item.name}\n            </p>\n          );\n        })}\n      </section>\n\n      <section className=\"integrations-grid\">\n        <IntegrationsGrid obj={integrationCollection} />\n      </section>\n      <FAQ category={[\"Meshery Integrations\"]} />\n    </IntegrationsWrapper>\n  );\n};\n\nexport default Integrations;\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport Layout from \"../../../components/layout\";\nimport SEO from \"../../../components/seo\";\nimport Navigation from \"../../../sections/General/Navigation\";\nimport Footer from \"../../../sections/General/Footer\";\nimport { GlobalStyle } from \"../../../sections/app.style\";\nimport lighttheme, { darktheme } from \"../../../theme/app/themeStyles\";\nimport MesheryIntegration from \"../../../sections/Meshery/Meshery-integrations\";\n\nconst Integrations = () => {\n  const [theme, setTheme] = React.useState();\n\n  const themeSetter = (thememode) => {\n    setTheme(thememode);\n  };\n\n  return (\n    <ThemeProvider theme={theme === \"dark\" ? darktheme : lighttheme}>\n      <GlobalStyle />\n      <SEO title=\"Meshery Integrations\"\n        description=\"A collection of supported Meshery Integrations.\"\n      />\n      <Layout>\n        <Navigation theme={theme} themeSetter={themeSetter} />\n        <MesheryIntegration />\n        <Footer />\n      </Layout>\n    </ThemeProvider>\n  );\n};\n\nexport default Integrations;\n"],"names":["HoneycombGrid","styled","IntegrationsWrapper","props","theme","darkJungleGreenColor","white","obj","className","map","item","index","status","style","background","key","src","img","alt","name","filter","Link","to","toLowerCase","useState","id","isSelected","categoryList","setcategoryList","IntegrationList","integrationCollection","setintegrationCollection","filterCategory","e","category","target","innerHTML","forEach","element","tempCat","push","filterCollection","selectedCategoryList","tempInt","Integration","onClick","React","setTheme","ThemeProvider","darktheme","lighttheme","title","description","Navigation","themeSetter","thememode","Footer"],"sourceRoot":""}